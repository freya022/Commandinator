server:
  port: ${API_PORT}
  # https://www.baeldung.com/exception-handling-for-rest-with-spring#spring-boot
  error:
    whitelabel:
      enabled: false
  forward-headers-strategy: framework

spring:
  application:
    name: api

  config:
    import:
      # PWD is module root
      - optional:file:../../config/.env[.properties]
      # PWD is backend root
      - optional:file:../config/.env[.properties]
      # PWD is project root
      - optional:file:./config/.env[.properties]

  session:
    jdbc:
      initialize-schema: always

  security:
    oauth2:
      client:
        registration:
          discord:
            client-id: ${api.discord-client-id}
            client-secret: ${api.discord-client-secret}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            redirect-uri: "{baseUrl}/login/oauth2/code/discord"
            scope: identify,guilds
        provider:
          discord:
            authorization-uri: https://discord.com/oauth2/authorize?prompt=none
            token-uri: https://discord.com/api/oauth2/token
            userInfoUri: https://discordapp.com/api/users/@me
            user-name-attribute: username
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      schema: api

api:
  jwt:
    # On Windows: use Git Bash in the 'config' directory
    # On Linux: Open terminal in the 'config' directory
    # openssl rand -out private.key -base64 64
    secret-key-file: ${API_PRIVATE_KEY_FILE}
  bot:
    server:
      host: ${BOT_SERVER_HOST}
      port: ${BOT_SERVER_PORT}